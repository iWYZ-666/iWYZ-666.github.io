<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="1123.3" y="101" width="0.2" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1126.35" y="111.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (21 samples, 0.11%)</title><rect x="1121.0" y="101" width="1.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1124.03" y="111.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.04%)</title><rect x="322.7" y="101" width="0.5" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="325.71" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="1189.2" y="165" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="1192.23" y="175.5" ></text>
</g>
<g >
<title>call_stub (19,802 samples, 99.95%)</title><rect x="10.1" y="325" width="1179.4" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="13.06" y="335.5" >call_stub</text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (7 samples, 0.04%)</title><rect x="18.5" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="21.46" y="191.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (3 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.1" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="1192.76" y="303.5" ></text>
</g>
<g >
<title>[libjvm.so] (5 samples, 0.03%)</title><rect x="1189.7" y="421" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1192.70" y="431.5" ></text>
</g>
<g >
<title>start_thread (19,802 samples, 99.95%)</title><rect x="10.1" y="453" width="1179.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="13.06" y="463.5" >start_thread</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9 samples, 0.05%)</title><rect x="1122.8" y="149" width="0.5" height="15.0" fill="rgb(202,52,52)" rx="2" ry="2" />
<text  x="1125.81" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10 samples, 0.05%)</title><rect x="322.7" y="133" width="0.6" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="325.71" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,802 samples, 99.95%)</title><rect x="10.1" y="421" width="1179.4" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="13.06" y="431.5" >[libjvm.so]</text>
</g>
<g >
<title>sysvec_call_function_single (2 samples, 0.01%)</title><rect x="1123.3" y="149" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1126.35" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="1123.3" y="117" width="0.2" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="1126.35" y="127.5" ></text>
</g>
<g >
<title>__mprotect (3 samples, 0.02%)</title><rect x="1189.8" y="357" width="0.1" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="1192.76" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (2 samples, 0.01%)</title><rect x="1123.3" y="165" width="0.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1126.35" y="175.5" ></text>
</g>
<g >
<title>irqentry_exit (6 samples, 0.03%)</title><rect x="1123.0" y="133" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1125.99" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (5 samples, 0.03%)</title><rect x="1189.7" y="389" width="0.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="1192.70" y="399.5" ></text>
</g>
<g >
<title>irqentry_exit (21 samples, 0.11%)</title><rect x="1121.0" y="117" width="1.3" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="1124.03" y="127.5" ></text>
</g>
<g >
<title>Interpreter (19,802 samples, 99.95%)</title><rect x="10.1" y="245" width="1179.4" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="13.06" y="255.5" >Interpreter</text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="323.5" y="133" width="0.2" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="326.48" y="143.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.01%)</title><rect x="323.7" y="133" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="326.72" y="143.5" ></text>
</g>
<g >
<title>Interpreter (19,802 samples, 99.95%)</title><rect x="10.1" y="261" width="1179.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="13.06" y="271.5" >Interpreter</text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="323.2" y="85" width="0.1" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="326.18" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (44 samples, 0.22%)</title><rect x="1119.7" y="133" width="2.6" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1122.66" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,802 samples, 99.95%)</title><rect x="10.1" y="389" width="1179.4" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="13.06" y="399.5" >[libjvm.so]</text>
</g>
<g >
<title>irqentry_exit (8 samples, 0.04%)</title><rect x="1122.3" y="117" width="0.5" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="1125.28" y="127.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6 samples, 0.03%)</title><rect x="1123.0" y="101" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1125.99" y="111.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (76 samples, 0.38%)</title><rect x="11.2" y="165" width="4.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="14.19" y="175.5" ></text>
</g>
<g >
<title>[libjvm.so] (5 samples, 0.03%)</title><rect x="1189.7" y="437" width="0.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1192.70" y="447.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="1189.4" y="69" width="0.1" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1192.40" y="79.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.02%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1192.76" y="255.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,802 samples, 99.95%)</title><rect x="10.1" y="437" width="1179.4" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="13.06" y="447.5" >[libjvm.so]</text>
</g>
<g >
<title>asm_sysvec_call_function_single (2 samples, 0.01%)</title><rect x="323.3" y="149" width="0.1" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="326.30" y="159.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::run (14,167 samples, 71.51%)</title><rect x="345.7" y="213" width="843.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="348.70" y="223.5" >Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::run</text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::measureMonteCarlo (5,487 samples, 27.70%)</title><rect x="18.9" y="197" width="326.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="21.87" y="207.5" >Lspec/benchmarks/scimark/monte_carlo/MonteCa..</text>
</g>
<g >
<title>irqentry_exit (3 samples, 0.02%)</title><rect x="1189.3" y="133" width="0.2" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="1192.34" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="1189.2" y="149" width="0.3" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1192.23" y="159.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8 samples, 0.04%)</title><rect x="322.7" y="117" width="0.5" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="325.71" y="127.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="1122.8" y="117" width="0.2" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1125.81" y="127.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,802 samples, 99.95%)</title><rect x="10.1" y="373" width="1179.4" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="13.06" y="383.5" >[libjvm.so]</text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.01%)</title><rect x="323.3" y="117" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="326.30" y="127.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::measureMonteCarlo (14,167 samples, 71.51%)</title><rect x="345.7" y="197" width="843.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="348.70" y="207.5" >Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::measureMonteCarlo</text>
</g>
<g >
<title>schedule (4 samples, 0.02%)</title><rect x="1123.1" y="85" width="0.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1126.11" y="95.5" ></text>
</g>
<g >
<title>__sched_text_start (6 samples, 0.03%)</title><rect x="1122.4" y="53" width="0.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1125.40" y="63.5" ></text>
</g>
<g >
<title>Interpreter (19,802 samples, 99.95%)</title><rect x="10.1" y="309" width="1179.4" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="13.06" y="319.5" >Interpreter</text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.01%)</title><rect x="322.6" y="117" width="0.1" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="325.59" y="127.5" ></text>
</g>
<g >
<title>all (19,811 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>Interpreter (105 samples, 0.53%)</title><rect x="10.1" y="213" width="6.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="13.06" y="223.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (8 samples, 0.04%)</title><rect x="1122.3" y="133" width="0.5" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="1125.28" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9 samples, 0.05%)</title><rect x="1122.8" y="165" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1125.81" y="175.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="1122.8" y="133" width="0.2" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1125.81" y="143.5" ></text>
</g>
<g >
<title>VM_Thread (6 samples, 0.03%)</title><rect x="1189.6" y="469" width="0.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1192.64" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="1120.9" y="85" width="0.1" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1123.91" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (2 samples, 0.01%)</title><rect x="323.7" y="165" width="0.1" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="326.72" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="323.7" y="101" width="0.1" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="326.72" y="111.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::integrate (5,120 samples, 25.84%)</title><rect x="18.9" y="181" width="304.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="21.87" y="191.5" >Lspec/benchmarks/scimark/monte_carlo/Mont..</text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.01%)</title><rect x="323.2" y="117" width="0.1" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="326.18" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="323.5" y="165" width="0.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="326.48" y="175.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (3 samples, 0.02%)</title><rect x="1189.8" y="197" width="0.1" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="1192.76" y="207.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (367 samples, 1.85%)</title><rect x="323.8" y="181" width="21.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="326.84" y="191.5" >L..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (21 samples, 0.11%)</title><rect x="1121.0" y="85" width="1.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1124.03" y="95.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="1123.1" y="53" width="0.2" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1126.11" y="63.5" ></text>
</g>
<g >
<title>mprotect_fixup (3 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.1" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="1192.76" y="287.5" ></text>
</g>
<g >
<title>change_protection (3 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.1" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1192.76" y="271.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::integrate (36 samples, 0.18%)</title><rect x="16.3" y="181" width="2.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="19.31" y="191.5" ></text>
</g>
<g >
<title>native_flush_tlb_multi (3 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="1192.76" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="323.5" y="117" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="326.48" y="127.5" ></text>
</g>
<g >
<title>BenchmarkThread (19,803 samples, 99.96%)</title><rect x="10.0" y="469" width="1179.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >BenchmarkThread</text>
</g>
<g >
<title>Interpreter (5,530 samples, 27.91%)</title><rect x="16.3" y="213" width="329.4" height="15.0" fill="rgb(248,119,119)" rx="2" ry="2" />
<text  x="19.31" y="223.5" >Interpreter</text>
</g>
<g >
<title>[libjvm.so] (3 samples, 0.02%)</title><rect x="1189.8" y="373" width="0.1" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="1192.76" y="383.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,802 samples, 99.95%)</title><rect x="10.1" y="357" width="1179.4" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="13.06" y="367.5" >[libjvm.so]</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (8 samples, 0.04%)</title><rect x="1122.3" y="101" width="0.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1125.28" y="111.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (6 samples, 0.03%)</title><rect x="1123.0" y="117" width="0.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1125.99" y="127.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::integrate (13,059 samples, 65.92%)</title><rect x="345.7" y="181" width="777.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="348.70" y="191.5" >Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::integrate</text>
</g>
<g >
<title>sysvec_call_function_single (2 samples, 0.01%)</title><rect x="323.3" y="133" width="0.1" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="326.30" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,802 samples, 99.95%)</title><rect x="10.1" y="405" width="1179.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.06" y="415.5" >[libjvm.so]</text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="323.3" y="85" width="0.1" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="326.30" y="95.5" ></text>
</g>
<g >
<title>irq_exit_rcu (23 samples, 0.12%)</title><rect x="1119.7" y="117" width="1.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1122.66" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (8 samples, 0.04%)</title><rect x="1122.3" y="149" width="0.5" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1125.28" y="159.5" ></text>
</g>
<g >
<title>[libjvm.so] (5 samples, 0.03%)</title><rect x="1189.7" y="405" width="0.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1192.70" y="415.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (3 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1192.76" y="223.5" ></text>
</g>
<g >
<title>Interpreter (43 samples, 0.22%)</title><rect x="16.3" y="197" width="2.6" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="19.31" y="207.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::main (19,697 samples, 99.42%)</title><rect x="16.3" y="229" width="1173.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="19.31" y="239.5" >Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::main</text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.05%)</title><rect x="1121.7" y="37" width="0.6" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1124.68" y="47.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10 samples, 0.05%)</title><rect x="322.7" y="149" width="0.6" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="325.71" y="159.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.03%)</title><rect x="1122.4" y="37" width="0.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="1125.40" y="47.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="323.7" y="117" width="0.1" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="326.72" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (3 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.1" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1192.76" y="319.5" ></text>
</g>
<g >
<title>Interpreter (19,802 samples, 99.95%)</title><rect x="10.1" y="293" width="1179.4" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="13.06" y="303.5" >Interpreter</text>
</g>
<g >
<title>schedule (10 samples, 0.05%)</title><rect x="1121.7" y="69" width="0.6" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1124.68" y="79.5" ></text>
</g>
<g >
<title>__sched_text_start (10 samples, 0.05%)</title><rect x="1121.7" y="53" width="0.6" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1124.68" y="63.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="1189.4" y="85" width="0.1" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1192.40" y="95.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (4,264 samples, 21.52%)</title><rect x="69.5" y="165" width="254.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="72.50" y="175.5" >Lspec/benchmarks/scimark/utils/Ra..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="322.6" y="85" width="0.1" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="325.59" y="95.5" ></text>
</g>
<g >
<title>C2_CompilerThre (2 samples, 0.01%)</title><rect x="1189.5" y="469" width="0.1" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="1192.52" y="479.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.02%)</title><rect x="1123.1" y="69" width="0.2" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="1126.11" y="79.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.03%)</title><rect x="1122.4" y="69" width="0.4" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1125.40" y="79.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (2 samples, 0.01%)</title><rect x="323.7" y="149" width="0.1" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="326.72" y="159.5" ></text>
</g>
<g >
<title>Interpreter (19,802 samples, 99.95%)</title><rect x="10.1" y="277" width="1179.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="13.06" y="287.5" >Interpreter</text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (28 samples, 0.14%)</title><rect x="16.8" y="165" width="1.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="19.79" y="175.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.01%)</title><rect x="322.6" y="133" width="0.1" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="325.59" y="143.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="1189.2" y="133" width="0.1" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="1192.23" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="323.5" y="149" width="0.2" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="326.48" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (44 samples, 0.22%)</title><rect x="1119.7" y="149" width="2.6" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="1122.66" y="159.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="1189.2" y="117" width="0.1" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1192.23" y="127.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.02%)</title><rect x="1189.3" y="117" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1192.34" y="127.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (23 samples, 0.12%)</title><rect x="1119.7" y="101" width="1.3" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1122.66" y="111.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="323.3" y="101" width="0.1" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="326.30" y="111.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="1189.3" y="101" width="0.2" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1192.34" y="111.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="323.2" y="101" width="0.1" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="326.18" y="111.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.01%)</title><rect x="1123.3" y="133" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1126.35" y="143.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/monte_carlo/MonteCarlo:::integrate (96 samples, 0.48%)</title><rect x="10.1" y="181" width="5.7" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="13.06" y="191.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (1,108 samples, 5.59%)</title><rect x="1123.5" y="181" width="66.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1126.53" y="191.5" >Lspec/b..</text>
</g>
<g >
<title>Interpreter (105 samples, 0.53%)</title><rect x="10.1" y="197" width="6.2" height="15.0" fill="rgb(239,108,108)" rx="2" ry="2" />
<text  x="13.06" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="322.6" y="101" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="325.59" y="111.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (9 samples, 0.05%)</title><rect x="15.8" y="181" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="18.78" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.1" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="1192.76" y="351.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.03%)</title><rect x="1189.7" y="453" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="1192.70" y="463.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/scimark/utils/Random:::nextDouble (10,586 samples, 53.43%)</title><rect x="492.3" y="165" width="630.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="495.28" y="175.5" >Lspec/benchmarks/scimark/utils/Random:::nextDouble</text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="1189.4" y="53" width="0.1" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="1192.40" y="63.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="322.6" y="149" width="0.1" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="325.59" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="1189.8" y="325" width="0.1" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="1192.76" y="335.5" ></text>
</g>
<g >
<title>Interpreter (105 samples, 0.53%)</title><rect x="10.1" y="229" width="6.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="13.06" y="239.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,802 samples, 99.95%)</title><rect x="10.1" y="341" width="1179.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="13.06" y="351.5" >[libjvm.so]</text>
</g>
<g >
<title>exit_to_user_mode_prepare (8 samples, 0.04%)</title><rect x="1122.3" y="85" width="0.5" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1125.28" y="95.5" ></text>
</g>
</g>
</svg>
